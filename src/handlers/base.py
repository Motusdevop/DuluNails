from aiogram import Router, F
from aiogram.filters import Command, CommandStart
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from aiogram.types import ReplyKeyboardRemove, \
    ReplyKeyboardMarkup, KeyboardButton, \
    InlineKeyboardMarkup, InlineKeyboardButton, \
    FSInputFile

from repository import UserRepository

from forms.register import RegisterForm

from keyboards import menu

router = Router()


async def check_register(message: Message, state: FSMContext):
    if not UserRepository.check_register(message.from_user.id):
        kb = [[KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è', request_contact=True)]]
        markup = ReplyKeyboardMarkup(keyboard=kb)

        await message.answer(
            '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å. –î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç ‚òéÔ∏è"',
                             reply_markup=markup)
        await state.set_state(RegisterForm.phone)


@router.message(F.text, CommandStart())
async def cmd_start(message: Message, state: FSMContext):
    await message.answer(
        """–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –º–∞–Ω–∏–∫—é—Ä""",
        reply_markup=menu.markup, parse_mode=ParseMode.MARKDOWN
    )
    await check_register(message, state)

@router.message(F.text.lower() == '–ø—Ä–∞–π—Å-–ª–∏—Å—Ç üí∏')
async def pricelist(message: Message):
    photo = FSInputFile("media/pricelist.jpg")
    await message.answer_photo(photo=photo, caption='–ê–∫—Ç—É–∞–ª—å–Ω—ã–π –ø—Ä–∞–π—Å–ª–∏—Å—Ç')

@router.message(F.text.lower() == '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ üí´')
async def portfolio(message: Message):
    await message.answer('–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –≤ –∫–∞–Ω–∞–ª–µ @dulullu')

